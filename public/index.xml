<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Random stuff</title>
    <link>https://blog.yelinaung.com/</link>
    <description>Recent content on Random stuff</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 13 Nov 2021 12:07:13 +0800</lastBuildDate><atom:link href="https://blog.yelinaung.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>for vs list comprehension</title>
      <link>https://blog.yelinaung.com/posts/things-i-read-13th-nov-2021/</link>
      <pubDate>Sat, 13 Nov 2021 12:07:13 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/posts/things-i-read-13th-nov-2021/</guid>
      <description>This is me writing down my discussion with someone from work regarding for loop vs list comprehension in Python.
During a code review, I was commenting on a chunk of code to change from for loop to a list comprehension. We also talked about why I wanted it that way. One reason is list comprehension could be (arguably) more readable than a for loop. For a simple loop, that might be the case.</description>
    </item>
    
    <item>
      <title>Things I Read : CPython Performance</title>
      <link>https://blog.yelinaung.com/posts/things-i-read-8th-nov-2021/</link>
      <pubDate>Tue, 09 Nov 2021 00:25:02 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/posts/things-i-read-8th-nov-2021/</guid>
      <description>I&amp;rsquo;ve been looking at how I can improve the performance of an internal service written in Python. I was wondering if there is a way to speed things up without rewriting large part of the code or using another programming language to rewrite part of the code. Then I remember reading about Pyston (a faster and highly-compatible with Cpython from Dropbox) on HackerNews and this seems like an opportunity to try it out.</description>
    </item>
    
    <item>
      <title>Things I Read - SIM Cards!</title>
      <link>https://blog.yelinaung.com/posts/things-i-read-7th-nov-2021/</link>
      <pubDate>Sun, 07 Nov 2021 16:39:38 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/posts/things-i-read-7th-nov-2021/</guid>
      <description>Another rainy day.
SIM Cards!!
Another day, another interesting HN post. I saw this post What is AT&amp;amp;T doing at 1111340002?.
And the top was very interesting to me.
 Even in relatively technical circles, like HN, many people are not aware of this and I use every opportunity I have to reiterate:
  A SIM card is a full-blown computer with its own CPU and memory.
  Your carrier can upload and run arbitrary code without your consent or knowledge.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://blog.yelinaung.com/about/</link>
      <pubDate>Sun, 07 Nov 2021 16:08:04 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/about/</guid>
      <description>Hi! My name is yelinaung
I am writing down
 what I&amp;rsquo;ve learned recently learning progress interesting topics books  </description>
    </item>
    
    <item>
      <title>Things I Read - Trie, Raft</title>
      <link>https://blog.yelinaung.com/posts/things-i-read-6th-nov-2021/</link>
      <pubDate>Sat, 06 Nov 2021 16:10:41 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/posts/things-i-read-6th-nov-2021/</guid>
      <description>Things that I stumbled on a rainy day.
 Understanding how Trie (Data Structure) works Understanding how Raft (Distributed Consensus algorithm) works  Trie I have heard/seen it but not in detail until now. Saw someone posted about it on HN and makes me curious.
I also found a post about Trie written in Python by Googling. I like the clear explanation with diagrams and put the code on github.</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://blog.yelinaung.com/posts/my-first-post/</link>
      <pubDate>Thu, 14 May 2020 20:47:43 +0800</pubDate>
      
      <guid>https://blog.yelinaung.com/posts/my-first-post/</guid>
      <description>This is some static page where you can write about yourself.</description>
    </item>
    
  </channel>
</rss>
